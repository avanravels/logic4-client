<?php

declare(strict_types=1);

namespace Webparking\Logic4Client\Data;

class Customer
{
    /** @param array<integer> $pricelistIds */
    public function __construct(
        public int $id,
        public ?string $loginName,
        public ?int $relationGroupId,
        public ?int $relationGroup2Id,
        public bool $hide,
        public ?string $freeValue1,
        public ?string $freeValue2,
        public ?string $freeValue3,
        public ?VatCode $vatCode,
        public ?Representative $representative,
        public ?RelationType $type,
        public ?Gender $gender,
        public ?RelationStatus $status,
        public ?string $isoCode,
        public ?string $countryCode,
        public int $countryId,
        public ?string $companyName,
        public ?string $firstName,
        public ?string $lastName,
        public ?string $emailAddress,
        public ?int $paymentMethodId,
        public ?array $pricelistIds,
        public ?string $telephoneNumber,
        public ?string $mobileNumber,
        public ?string $faxnumber,
        public ?string $chamberOfCommerceCode,
        public ?string $website,
        public ?float $discount,
        public ?int $standardReportIdForPickingList,
        public ?int $standardReportIdForSalesOrderDelivery,
        public ?string $city,
        public ?string $zipcode,
        public ?string $street,
        public ?string $houseNumber,
        public ?string $houseNumberAddition,
        public ?string $vatNumber,
        public bool $dontPrintPaperInvoiceForDebtor,
        public bool $receiveInvoiceElectronically,
        public ?int $electronicInvoiceAttachmentType,
        public ?int $standardInvoiceLayoutReportId,
        public ?string $preposition,
        public ?float $creditLimit,
        public ?int $shippingMethodId,
        public ?int $globalisationId,
        public ?int $standardPackagingSlipLayoutReportId,
    ) {
    }

    /** @param array<mixed> $data */
    public static function make(array $data): self
    {
        return new self(
            id: $data['Id'],
            loginName: $data['LoginName'],
            relationGroupId: $data['RelationGroupId'],
            relationGroup2Id: $data['RelationGroup2Id'],
            hide: $data['Hide'],
            freeValue1: $data['FreeValue1'],
            freeValue2: $data['FreeValue2'],
            freeValue3: $data['FreeValue3'],
            vatCode: $data['VatCode'] ? VatCode::make($data['VatCode']) : null,
            representative: $data['Representative'] ? Representative::make($data['Representative']) : null,
            type: $data['Type'] ? RelationType::make($data['Type']) : null,
            gender: $data['Gender'] ? Gender::make($data['Gender']) : null,
            status: $data['Status'] ? RelationStatus::make($data['Status']) : null,
            isoCode: $data['IsoCode'],
            countryCode: $data['CountryCode'],
            countryId: $data['CountryId'],
            companyName: $data['CompanyName'],
            firstName: $data['FirstName'],
            lastName: $data['LastName'],
            emailAddress: $data['EmailAddress'],
            paymentMethodId: $data['PaymentMethodId'],
            pricelistIds: $data['PricelistIds'],
            telephoneNumber: $data['TelephoneNumber'],
            mobileNumber: $data['MobileNumber'],
            faxnumber: $data['Faxnumber'],
            chamberOfCommerceCode: $data['ChamberOfCommerceCode'],
            website: $data['Website'],
            discount: $data['Discount'],
            standardReportIdForPickingList: $data['StandardReportIdForPickingList'],
            standardReportIdForSalesOrderDelivery: $data['StandardReportIdForSalesOrderDelivery'],
            city: $data['City'],
            zipcode: $data['Zipcode'],
            street: $data['Street'],
            houseNumber: $data['HouseNumber'],
            houseNumberAddition: $data['HouseNumberAddition'],
            vatNumber: $data['VatNumber'],
            dontPrintPaperInvoiceForDebtor: $data['DontPrintPaperInvoiceForDebtor'],
            receiveInvoiceElectronically: $data['ReceiveInvoiceElectronically'],
            electronicInvoiceAttachmentType: $data['ElectronicInvoiceAttachmentType'],
            standardInvoiceLayoutReportId: $data['StandardInvoiceLayoutReportId'],
            preposition: $data['Preposition'],
            creditLimit: $data['CreditLimit'],
            shippingMethodId: $data['ShippingMethodId'],
            globalisationId: $data['GlobalisationId'],
            standardPackagingSlipLayoutReportId: $data['StandardPackagingSlipLayoutReportId'],
        );
    }
}
